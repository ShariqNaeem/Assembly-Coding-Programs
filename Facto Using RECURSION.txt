.model small
.stack 100h
.data
.code

main proc

call indec
push ax
call fact

call outdec

mov ah,4ch
int 21h

main endp
;////////FACTORIAL////////////
fact proc
mov bp,sp
mov ax,[bp+2]
cmp ax,1
je L1
dec ax
push ax
call fact
mov bp,sp
mov bx,[bp+2]
mul bx

L1:
ret 2
fact endp


;//////////OUTDEC///////////
outdec proc

push ax
push bx
push cx
push dx

mov cx,0
mov bx,10

jge @else
push ax

mov ah,2
mov dl,'-'
int 21h

pop ax
neg ax

@else:
mov dx,0
mov bx,10
div bx
push dx
inc cx

cmp ax,0
jnz @else
mov ah,2

Print:
pop dx
add dl,48
int 21h

Loop print

pop dx
pop cx
pop bx
pop ax

ret

outdec endp

;//////INDEC/////////////

INDEC proc
push bx
push cx
push dx

begin:
mov bx,0
mov cx,0

mov ah,2
mov dl,'?'
int 21h

mov ah,1
int 21h

cmp al,'-'
je minus
cmp al,'+'
je plus
jmp process

minus:
mov cx,1

plus:
int 21h

process:
cmp al,'0'
jl invalid
cmp al,'9'
jg invalid

sub al,48
mov ah,0

PUSH ax
mov ax,10
mul bx
POP bx
add bx,ax

mov ah,1
int 21h

cmp al,13
jne process

mov ax,bx
cmp cx,0
je exit
neg ax

exit:
POP dx
POP cx
POP bx
ret

invalid:
mov ah,2
mov dl,10
int 21h

mov dl,13
int 21h 

jmp begin

INDEC endp

end main